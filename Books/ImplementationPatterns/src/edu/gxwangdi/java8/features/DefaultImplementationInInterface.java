package edu.gxwangdi.java8.features;


/*
 * From Java 8, interfaces are enhanced to have method with implementation. 
 * We can use default and static keyword to create interfaces with method 
 * implementation. 
 * 
 * We know that Java doesnâ€™t provide multiple inheritance in Classes because 
 * it leads to Diamond Problem. So how it will be handled with interfaces now, 
 * since interfaces are now similar to abstract classes. The solution is that 
 * compiler will throw exception in this scenario and we will have to provide 
 * implementation logic in the class implementing the interfaces.
 * */
public class DefaultImplementationInInterface implements Interface1, Interface2 {

	public static void main(String[] args) {
		Interface1 i1 = new DefaultImplementationInInterface();
		i1.method1("Hello");
		i1.log("World!");
		
		i1 = (s) -> System.out.println(s);
		i1.method1("lambda expressions for interface that only one method needs implementation.");

		Interface2 i2 = new DefaultImplementationInInterface();
		i2.method2();
		i2.log("Hello i2.");
	}

	@Override
	public void method2() {
		System.out.println("Method 2.");
	}

	@Override
	public void method1(String str) {
		System.out.println("Method 1 str:" + str);
	}

	@Override
	public void log(String str) {
		System.out.println("Implementation class logging:" + str);

		// This is auto-generated by the compiler.
		Interface1.super.log(str);
		Interface1.print(str);
	}
}

/*
 * An Interface that contains only one abstract method is known as 
 * functional interface. It can have any number of default and static 
 * methods. It can also declare methods of object class.
 * */
@FunctionalInterface
interface Interface1 {
	void method1(String str);

	default void log(String str) {
		System.out.println("I1 logging:" + str);
	}

	static void print(String str) {
		System.out.println("I1 static printing " + str);
	}
	
	// Trying to override Object method gives compile time error.
//	default String toString() {
//		return "i1";
//	}
}

@FunctionalInterface
interface Interface2 {
	void method2();

	default void log(String str) {
		System.out.println("I2 logging:" + str);
	}
}
